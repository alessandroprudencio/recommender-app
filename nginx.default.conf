# Define um servidor HTTP na porta 80
server {
    listen 80;

     # Bloqueia qualquer cache para rotas da API
    location /api/ {
        proxy_pass http://api:8080;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass *;       # ← Garante que nada seja cacheado
        proxy_no_cache 1;           # ← Garante que nada seja salvo no cache
    }

    location /api/send-recommendation {
        proxy_pass http://api:8080;

        # Ajusta os timeouts apenas para este endpoint
        proxy_connect_timeout       300s;
        proxy_send_timeout          300s;
        proxy_read_timeout          300s;
        send_timeout                300s;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass *;       # ← Garante que nada seja cacheado
        proxy_no_cache 1;           # ← Garante que nada seja salvo no cache
    }

        location /api/migrate-purchase-history {
        proxy_pass http://api:8080;

        # Ajusta os timeouts apenas para este endpoint
        proxy_connect_timeout       10000s;
        proxy_send_timeout          10000s;
        proxy_read_timeout          10000s;
        send_timeout                10000s;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass *;       # ← Garante que nada seja cacheado
        proxy_no_cache 1;           # ← Garante que nada seja salvo no cache
    }

    location / {
        # Encaminha para o backend (monolito em Express, por exemplo)
        proxy_pass http://api:8080;

        # Usa HTTP/1.1 para suportar conexões keep-alive e WebSockets
        proxy_http_version 1.1;

        # Suporte a WebSocket e conexões atualizáveis
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Repassa o host original para o backend
        proxy_set_header Host $host;

        # Passa o IP real do cliente para o backend
        proxy_set_header X-Real-IP $remote_addr;

        # Evita cache em requisições com "Upgrade" (ex: WebSocket)
        proxy_cache_bypass $http_upgrade;

        # # Ativa o cache configurado com o nome STATIC
        # proxy_cache STATIC;

        # # Cacheia respostas HTTP 200 por 10 minutos
        # proxy_cache_valid 200 10m;

        # Usa versão antiga do cache caso o backend esteja com erro ou timeout
        proxy_cache_use_stale error timeout updating;

        # Adiciona um cabeçalho útil para debug: mostra HIT, MISS ou BYPASS
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Rota para servir arquivos públicos diretamente do disco
    location /public {
        alias /var/www/app/public;
        expires 30d;
        add_header Cache-Control "public";
    }
}
